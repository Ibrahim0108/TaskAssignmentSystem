@using Microsoft.AspNetCore.Http
@using TaskAssignmentSystem.Models.Users
@{
    var role = Context.Session.GetString("UserRole");
    var userName = Context.Session.GetString("UserName");
    var isLoggedIn = !string.IsNullOrEmpty(role);
    var isAdmin = role == "Admin";
    var isTeacher = role == "Teacher";
    var isStudent = role == "Student";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@(ViewData["Title"] ?? "TaskAssignmentSystem")</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="../Views/Shared/_Layout.cshtml.css" rel="stylesheet" />

    <style>
        body {
            padding-top: 70px;
            animation: fadeIn 0.4s ease-in;
        }
        @@keyframes fadeIn {
            from {
                 opacity: 0;
                 }

            to {
            opacity: 1;
                }
        }

        .navbar .nav-link {
            transition: color .2s ease, transform .2s ease;
        }

            .navbar .nav-link:hover {
                transform: translateY(-1px);
            }

        .card {
            border-radius: 0.75rem;
            box-shadow: 0 6px 18px rgba(0,0,0,.06);
        }

        .table-hover tbody tr:hover {
            background-color: #f7f9fc;
        }

        .badge-pill {
            border-radius: 999px;
        }

        .btn-ghost {
            background: transparent;
            border: 1px solid rgba(255,255,255,.2);
        }

        .toast-container {
            z-index: 1080;
        }
    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top shadow-sm">
            <div class="container-fluid">
                <a class="navbar-brand fw-semibold" href="@Url.Action("Index", "Home")">TaskAssignmentSystem</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mainNav">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div id="mainNav" class="collapse navbar-collapse">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        @if (isLoggedIn)
                        {
                            <li class="nav-item">
                                <a class="nav-link @(ViewData["ActiveNav"] as string == "Dashboard" ? "active" : "")"
                                   href="@(isAdmin? Url.Action("Dashboard", "Admin") : Url.Action("Index", "Home"))">
                                    Dashboard
                                </a>
                            </li>

                            <li class="nav-item">
                                <a class="nav-link @(ViewData["ActiveNav"] as string == "Workspaces" ? "active" : "")"
                                   href="@Url.Action("Index", "Workspaces")">
                                    Workspaces
                                </a>
                            </li>

                            @* Create Workspace → Teacher only *@
                            @if (isTeacher)
                            {
                                <li class="nav-item">
                                    <a class="nav-link @(ViewData["ActiveNav"] as string == "CreateWorkspace" ? "active" : "")"
                                       href="@Url.Action("Create", "Workspaces")">
                                        Create Workspace
                                    </a>
                                </li>
                            }

                            @* Admin extras *@
                            @if (isAdmin)
                            {
                                <li class="nav-item">
                                    <a class="nav-link @(ViewData["ActiveNav"] as string == "AdminWorkspaces" ? "active" : "")"
                                       href="@Url.Action("Workspaces", "Admin")">
                                        Manage Workspaces
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link @(ViewData["ActiveNav"] as string == "AdminUsers" ? "active" : "")"
                                       href="@Url.Action("Users", "Admin")">
                                        Manage Users
                                    </a>
                                </li>
                            }
                        }
                    </ul>

                    <ul class="navbar-nav">
                        @if (isLoggedIn)
                        {
                            <li class="nav-item">
                                <span class="navbar-text me-2 text-white-50">Hi, @userName (@role)</span>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-warning" href="@Url.Action("Logout", "Users")">Logout</a>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link" href="@Url.Action("Login", "Users")">Login</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="@Url.Action("Register", "Users")">Register</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show mt-2" role="alert">
                @TempData["Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show mt-2" role="alert">
                @TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        <main role="main" class="pb-4">
            @RenderBody()
        </main>
    </div>

    @await Html.PartialAsync("_ConfirmModal")


    <footer class="border-top py-3 text-center text-muted">
        <small>&copy; @DateTime.UtcNow.Year - TaskAssignmentSystem</small>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    @RenderSection("Scripts", required: false)
</body>
</html>
