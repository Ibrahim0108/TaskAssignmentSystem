@model TaskAssignmentSystem.Models.Teams.Team
@inject TaskAssignmentSystem.Services.Interfaces.IAuthService Auth
@{
    var role = Context.Session.GetString("UserRole");
    var userId = Context.Session.GetInt32("UserId");
}
<div class="container mt-4">
    <div class="d-flex align-items-center">
        <h3 class="mb-0">Team: @Model.Name</h3>
        <div class="ms-auto">
            @if (role == "Teacher" || role == "Admin")
            {
                <a class="btn btn-warning btn-sm me-2" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
                <form method="post" asp-action="Delete" asp-route-id="@Model.Id" style="display:inline;"
                      data-confirm="true"
                      data-confirm-title="Delete Team"
                      data-confirm-message="Are you sure you want to delete this team?">
                    
                    <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                </form>
            }
            <a class="btn btn-outline-secondary btn-sm ms-2" href="/Teams/ForWorkspace/@Model.WorkspaceId">Back</a>
        </div>

    </div>

    @if (role == "Teacher")
    {
        <p>Join Code: <code>@Model.JoinCode</code></p>
    }

    <p>
        Leader:
        @{
            var leader = Auth.GetById(Model.LeaderUserId);
        }
        @(leader != null ? leader.FullName : $"User {Model.LeaderUserId}")
    </p>

    <p>
        Status:
        @if (Model.IsSubmitted)
        {
            <span class="badge bg-success">Submitted @Model.SubmittedAt</span>
        }
        else
        {
            <span class="badge bg-warning text-dark">In Progress</span>
        }
    </p>
    <p>
        @if (userId == Model.LeaderUserId && !Model.IsSubmitted)
        {
            <button class="btn btn-outline-primary mt-3" id="openAssignModal">+ Assign Task</button>
        }
    </p>

    <hr />

    <h5>Members</h5>
    @if (Model.TeamMembers == null || !Model.TeamMembers.Any())
    {
        <div class="alert alert-warning">No members yet.</div>
    }
    else
    {
        <ul>
            @foreach (var member in Model.TeamMembers)
            {
                var u = Auth.GetById(member.UserId);

                // skip leader (teacher/admin) if they were set as LeaderUserId but not joined
                if (u != null && member.UserId != Model.LeaderUserId)
                {
                    <li>@u.FullName (@u.Username) - @u.Role</li>
                }
            }
        </ul>

    }

    <h5 class="mt-3">Updates</h5>
    @if (!Model.Updates.Any())
    {
        <div class="alert alert-info">No updates yet.</div>
    }
    else
    {
        <table class="table table-sm">
            <thead><tr><th>When</th><th>By</th><th>Content</th><th>Reviewed</th><th></th></tr></thead>
            <tbody>
                @foreach (var u in Model.Updates.OrderByDescending(x => x.CreatedAt))
                {
                    var user = Auth.GetById(u.UserId);
                    <tr>
                        <td>@u.CreatedAt.ToLocalTime()</td>
                        <td>@(user != null ? user.FullName : $"User {u.UserId}")</td>
                        <td>@u.Content</td>
                        @if (u.AssignedToUserId.HasValue)
                        {
                            var target = Auth.GetById(u.AssignedToUserId.Value);
                            if (target != null)
                            {
                                <div><small class="text-muted">Assigned to: @target.FullName</small></div>
                            }
                        }
                        <td>@(u.ReviewedByLeader ? "Yes" : "No")</td>
                        <td>
                            @if (userId == Model.LeaderUserId && !u.ReviewedByLeader)
                            {
                                <form method="post" asp-action="LeaderReview">
                                    <input type="hidden" name="teamId" value="@Model.Id" />
                                    <input type="hidden" name="updateId" value="@u.Id" />
                                    <button class="btn btn-sm btn-outline-success" type="submit">Mark Reviewed</button>
                                </form>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    @if (userId != null && Model.TeamMembers.Any(m => m.UserId == userId.Value) && !Model.IsSubmitted)
    {
        <div class="card mt-3">
            <div class="card-body">
                <form method="post" asp-action="AddUpdate"
                      data-confirm="true"
                      data-confirm-title="Add Update"
                      data-confirm-message="Are you sure you want to post this update?">
                    <input type="hidden" name="teamId" value="@Model.Id" />
                    <div class="mb-2">
                        <textarea name="content" class="form-control" rows="2" placeholder="Describe subtask..." required></textarea>
                    </div>

                    <div class="mb-2">
                        <label>Status:</label>
                        <select name="status" class="form-select" required>
                            <option value="0">Not Started</option>
                            <option value="1">In Progress</option>
                            <option value="2">Completed</option>
                            <option value="3">Blocked</option>
                        </select>
                    </div>

                    <button class="btn btn-primary btn-sm" type="submit">Add Update</button>

                </form>
            </div>
        </div>
    }

    @if (userId == Model.LeaderUserId && !Model.IsSubmitted)
    {
        <form class="mt-3" method="post" asp-action="Submit"
              data-confirm="true"
              data-confirm-title="Submit Team"
              data-confirm-message="Are you sure you want to submit the team to the teacher?">
            <input type="hidden" name="teamId" value="@Model.Id" />
            <button class="btn btn-danger" type="submit">Submit To Teacher</button>
        </form>
    }

   
</div>

<div id="assignModal" class="modal-overlay" style="display:none;">
    <div class="modal-content">
        <h5>Assign Task</h5>
        <form method="post" asp-action="AssignTask">
            <input type="hidden" name="teamId" value="@Model.Id" />

            <div class="mb-2">
                <label>Assign To:</label>
                <select name="assignedToUserId" class="form-select" required>
                    @foreach (var member in Model.TeamMembers)
                    {
                        var u = Auth.GetById(member.UserId);
                        if (u != null && member.UserId != Model.LeaderUserId)
                        {
                            <option value="@u.Id">@u.FullName (@u.Username)</option>
                        }
                    }
                </select>
            </div>

            <div class="mb-2">
                <label>Task Description:</label>
                <textarea name="content" class="form-control" rows="2" required></textarea>
            </div>

            <div class="d-flex justify-content-end">
                <button type="button" class="btn btn-secondary me-2" id="closeAssignModal">Cancel</button>
                <button type="submit" class="btn btn-primary">Assign</button>
            </div>
        </form>
    </div>
</div>

<style>
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
    }

    .modal-content {
        background: white;
        padding: 20px;
        border-radius: 8px;
        width: 400px;
        box-shadow: 0 0 15px rgba(0,0,0,0.3);
    }
</style>

<script>
    document.getElementById("openAssignModal")?.addEventListener("click", () => {
        document.getElementById("assignModal").style.display = "flex";
    });
    document.getElementById("closeAssignModal")?.addEventListener("click", () => {
        document.getElementById("assignModal").style.display = "none";
    });
</script>


