@model List<TaskAssignmentSystem.Models.Teams.Team>
@using TaskAssignmentSystem.Models.Users
@using TaskAssignmentSystem.Models.Teams

@{
    var ws = ViewBag.Workspace as TaskAssignmentSystem.Models.Workspaces.Workspace;
    var role = Context.Session.GetString("UserRole");
    var users = ViewBag.Users as List<User>;

}
<div class="container mt-4">
    <h3>Teams in @ws!.Name</h3>
    <p>Workspace Id: @ws.Id</p>
    <hr />

    @if (role == "Teacher" || role == "Admin")
    {
        <a class="btn btn-primary" href="/Teams/Create?workspaceId=@ws.Id">Create Team</a>
    }
    <a class="btn btn-outline-success ms-2" href="/Teams/Join?workspaceId=@ws.Id">Join Team</a>

    <div class="mt-3">
        @if (!Model.Any())
        {
            <div class="alert alert-info">No teams yet.</div>
        }
        else
        {
            <table class="table table-striped">
                <thead><tr><th>Id</th><th>Name</th><th>Join Code</th><th>Leader</th><th>Members</th><th>Progress</th><th>Status</th><th></th></tr></thead>
                <tbody>
                    @foreach (var t in Model)
                    {
                        var updates = t.Updates;

                        Func<SubtaskStatus, int> statusToPercent = status =>
                        {
                            return status switch
                            {
                                SubtaskStatus.NotStarted => 0,
                                SubtaskStatus.InProgress => 50,
                                SubtaskStatus.Completed => 100,
                                SubtaskStatus.Blocked => 25,
                                _ => 0
                            };
                        };

                        var overallProgress = updates.Any()
                        ? (int)updates.Average(u => statusToPercent(u.Status))
                        : 0;


                        // decide text
                        string progressText = overallProgress switch
                        {
                            0 => "Not Started",
                            <= 49 => "In Progress",
                            < 100 => "Almost Done",
                            100 => "Completed",
                            _ => "Unknown"
                        };

                        // decide bar color
                        string progressBarClass = overallProgress switch
                        {
                            0 => "bg-secondary",
                            <= 49 => "bg-warning",
                            < 100 => "bg-info",
                            100 => "bg-success",
                            _ => "bg-secondary"
                        };

                        <tr>
                            <td>@t.Id</td>
                            <td>@t.Name</td>
                            <td>
                                @if (role == "Teacher")
                                {
                                    <code>@t.JoinCode</code>
                                }
                                else
                                {
                                    <span class="text-muted">Hidden</span>
                                }
                            </td>

                            <td>
                                @{
                                    var leader = users?.FirstOrDefault(u => u.Id == t.LeaderUserId);
                                }
                                @(leader != null ? leader.FullName : $"User {t.LeaderUserId}")
                            </td>


                            <td>
                                <div class="progress" style="height: 25px;">
                                    <div class="progress-bar @progressBarClass"
                                         role="progressbar"
                                         style="width:@overallProgress%"
                                         aria-valuenow="@overallProgress"
                                         aria-valuemin="0"
                                         aria-valuemax="100">
                                    </div>
                                </div>
                                <div class="small text-muted mt-1">
                                    @progressText (@overallProgress%)
                                </div>
                            </td>



                            <td>
                                @if (t.IsSubmitted)
                                {
                                    <span class="badge bg-success">Submitted @t.SubmittedAt</span>
                                }
                                else
                                {
                                    <span class="badge bg-warning text-dark">In Progress</span>
                                }
                            </td>

                            <td>
                                <a class="btn btn-sm btn-secondary" href="/Teams/Details/@t.Id">Details</a>
                                @if (role == "Teacher" || role == "Admin")
                                {
                                    <a class="btn btn-sm btn-warning" href="/Teams/Edit/@t.Id">Edit</a>
                                    <form method="post" asp-action="Delete" asp-route-id="@t.Id" style="display:inline;">
                                        <button type="submit" class="btn btn-sm btn-danger"
                                                onclick="return confirm('Are you sure you want to delete this team?');">
                                            Delete
                                        </button>
                                    </form>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>
