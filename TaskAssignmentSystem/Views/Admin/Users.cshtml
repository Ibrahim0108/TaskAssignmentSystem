@using TaskAssignmentSystem.Models.Users
@{
    ViewData["Title"] = "Manage Users";
    ViewData["ActiveNav"] = "AdminUsers";
    dynamic m = Model;
}
<h3 class="mb-3">Manage Users</h3>

<ul class="nav nav-tabs" id="userTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="pending-tab" data-bs-toggle="tab" data-bs-target="#pending" type="button" role="tab">Pending (@m.Pending.Count)</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="all-tab" data-bs-toggle="tab" data-bs-target="#all" type="button" role="tab">All Users (@m.All.Count)</button>
    </li>
</ul>

<div class="tab-content border-start border-end border-bottom p-3">
    <div class="tab-pane fade show active table-fixed " id="pending" role="tabpanel">
        @if (m.Pending.Count == 0)
        {
            <div class="alert alert-success">No pending approvals</div>
        }
        else
        {
            <div class="table-responsive table-fixed">
                <table class="table table-hover align-middle">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Username</th>
                            <th>Full Name</th>
                            <th>Role</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var u in m.Pending)
                        {
                            <tr class="table-warning">
                                <td>@u.Id</td>
                                <td>@u.Username</td>
                                <td>@u.FullName</td>
                                <td>
                                    @if (@u.Role == Role.Admin)
                                    {
                                        <span class="badge bg-danger">Admin</span>
                                    }
                                    else if (@u.Role == Role.Teacher)
                                    {
                                        <span class="badge bg-warning">Teacher</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-primary">Student</span>
                                    }
                                </td>
                                <td>
                                    <form asp-action="Approve" asp-controller="Admin" method="post" class="d-inline">
                                        <input type="hidden" name="id" value="@u.Id" />
                                        <button class="btn btn-sm btn-success">Approve</button>
                                    </form>
                                    <form asp-action="Reject" asp-controller="Admin" method="post" class="d-inline">
                                        <input type="hidden" name="id" value="@u.Id" />
                                        <button class="btn btn-sm btn-outline-danger">Reject</button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>

    <div class="tab-pane fade" id="all" role="tabpanel">
        <div class="table-responsive table-fixed">
            <table class="table table-hover align-middle">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Username</th>
                        <th>Full Name</th>
                        <th>Role</th>
                        <th>Approved</th>
                        <th>Set Role</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var u in m.All)
                    {
                        <tr>
                            <td>@u.Id</td>
                            <td>@u.Username</td>
                            <td>@u.FullName</td>
                            <td>
                                @if (@u.Role.ToString() == "Admin")
                                {
                                    <span class="badge bg-danger">Admin</span>
                                }
                                else if (@u.Role.ToString() == "Teacher")
                                {
                                    <span class="badge bg-warning">Teacher</span>
                                }
                                else
                                {
                                    <span class="badge bg-primary">Student</span>
                                }
                            </td>
                            <td>@(u.IsApproved ? "Yes" : "No")</td>
                            <td>
                                <form asp-action="SetRole" asp-controller="Admin" method="post" class="d-flex gap-2">
                                    <input type="hidden" name="id" value="@u.Id" />
                                    <select name="role" class="form-select form-select-sm" style="max-width: 160px;">
                                        <option value="@Role.Admin" selected="@(u.Role == Role.Admin)">Admin</option>
                                        <option value="@Role.Teacher" selected="@(u.Role == Role.Teacher)">Teacher</option>                                    
                                    </select>
                                    <button class="btn btn-sm btn-outline-primary"> <i class="bi bi-pencil"></i> Update</button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>



<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, #f0f9f0 0%, #e8f5e8 100%);
        min-height: 100vh;
        padding: 32px 20px;
        line-height: 1.6;
    }

    /* Container */
    .container {
        max-width: 1200px;
        margin: 0 auto;
    }

    /* Page Title */
    h3 {
        color: #16a34a;
        font-size: 32px;
        font-weight: 700;
        letter-spacing: -0.5px;
        margin-bottom: 32px;
        position: relative;
        padding-left: 50px;
        animation: slideInLeft 0.6s ease-out;
    }

        h3::before {
            content: '??';
            position: absolute;
            left: 0;
            top: -2px;
            font-size: 32px;
            animation: pulse 2s infinite;
        }

        h3::after {
            content: '';
            position: absolute;
            bottom: -8px;
            left: 50px;
            width: 140px;
            height: 3px;
            background: linear-gradient(90deg, #22c55e, #16a34a);
            border-radius: 2px;
        }

    @@keyframes slideInLeft {
        from

    {
        opacity: 0;
        transform: translateX(-30px);
    }

    to {
        opacity: 1;
        transform: translateX(0);
    }

    }

    @@keyframes pulse {
        0%, 100%

    {
        transform: scale(1);
    }

    50% {
        transform: scale(1.1);
    }

    }

    /* Utility Classes */
    .mb-3 {
        margin-bottom: 32px;
    }

    .p-3 {
        padding: 32px;
    }

    /* Navigation Tabs */
    .nav {
        display: flex;
        flex-wrap: wrap;
        list-style: none;
        margin: 0;
        padding: 0;
    }

    .nav-tabs {
        border-bottom: none;
        background: linear-gradient(145deg, #ffffff 0%, #fefffe 100%);
        border-radius: 16px 16px 0 0;
        box-shadow: 0 -5px 20px rgba(34, 197, 94, 0.1);
        overflow: hidden;
        position: relative;
    }

        .nav-tabs::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: linear-gradient(90deg, #22c55e 0%, #16a34a 50%, #15803d 100%);
        }

    .nav-item {
        position: relative;
    }

    .nav-link {
        display: block;
        padding: 20px 32px;
        color: #6b7280;
        text-decoration: none;
        border: none;
        background: transparent;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);
        position: relative;
        overflow: hidden;
        border-radius: 0;
    }

        .nav-link::before {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 3px;
            background: linear-gradient(90deg, #22c55e, #16a34a);
            transition: width 0.3s ease;
        }

        .nav-link:hover {
            color: #16a34a;
            background: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%);
        }

            .nav-link:hover::before {
                width: 100%;
            }

        .nav-link.active {
            color: #16a34a;
            background: linear-gradient(135deg, #dcfce7 0%, #bbf7d0 100%);
            font-weight: 700;
        }

            .nav-link.active::before {
                width: 100%;
            }

    /* Tab Content */
    .tab-content {
        background: linear-gradient(145deg, #ffffff 0%, #fefffe 100%);
        border: 1px solid rgba(34, 197, 94, 0.1);
        border-radius: 0 0 16px 16px;
        box-shadow: 0 20px 50px rgba(34, 197, 94, 0.1), 0 10px 30px rgba(0, 0, 0, 0.05);
        position: relative;
        overflow: hidden;
    }

    .table-fixed {
    min-width: 700px;
    max-height: 500px;
    overflow-y: auto; 
}



    .border-start {
        border-left: 1px solid rgba(34, 197, 94, 0.1) !important;
    }

    .border-end {
        border-right: 1px solid rgba(34, 197, 94, 0.1) !important;
    }

    .border-bottom {
        border-bottom: 1px solid rgba(34, 197, 94, 0.1) !important;
    }

    .tab-pane {
        display: none;
        animation: fadeIn 0.5s ease-in-out;
    }

        .tab-pane.show.active {
            display: block;
        }

    .fade {
        transition: opacity 0.3s ease;
    }

    @@keyframes fadeIn {
        from

    {
        opacity: 0;
        transform: translateY(10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    /* Alert Styling */
    .alert {
        border: none;
        border-radius: 12px;
        padding: 20px 28px;
        font-size: 16px;
        font-weight: 600;
        box-shadow: 0 6px 20px rgba(34, 197, 94, 0.15);
        text-align: center;
        position: relative;
        overflow: hidden;
    }

        .alert::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
            animation: shimmer 2s infinite;
        }

    @@keyframes shimmer {
        0%

    {
        left: -100%;
    }

    100% {
        left: 100%;
    }

    }

    .alert-success {
        background: linear-gradient(135deg, #dcfce7 0%, #bbf7d0 100%);
        color: #15803d;
        border-left: 4px solid #22c55e;
    }

    /* Table Styling */
    .table-responsive {
        border-radius: 12px;
        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);
        overflow-y: auto;
    }

    .table {
        margin-bottom: 0;
        font-size: 15px;
        width: 100%;
        border-collapse: collapse;
    }

        .table thead th {
            background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
            color: #374151;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            font-size: 13px;
            padding: 18px 16px;
            border: none;
            position: sticky;
            top: 0;
            background: #f8fafc; /* match your header color */
            z-index: 2;
            text-align: left;
        }

            .table thead th::after {
                content: '';
                position: absolute;
                bottom: 0;
                left: 0;
                right: 0;
                height: 2px;
                background: linear-gradient(90deg, #22c55e, #16a34a);
            }

        .table tbody td {
            padding: 16px;
            border: none;
            border-bottom: 1px solid rgba(34, 197, 94, 0.1);
            vertical-align: middle;
            color: #374151;
            font-weight: 500;
        }

        .table tbody tr {
            transition: all 0.3s ease;
            position: relative;
        }

    .table-hover tbody tr:hover {
        background: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%);
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(34, 197, 94, 0.15);
    }

    .align-middle {
        vertical-align: middle;
    }

    /* Badge Styling */
    .badge {
        padding: 6px 14px;
        font-size: 11px;
        font-weight: 600;
        border-radius: 16px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        display: inline-block;
        position: relative;
        overflow: hidden;
    }

    .bg-primary {
        background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
        color: white;
        box-shadow: 0 2px 8px rgba(59, 130, 246, 0.3);
    }

    .bg-success {
        background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%);
        color: white;
        box-shadow: 0 2px 8px rgba(34, 197, 94, 0.3);
    }

    .bg-warning {
        background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
        color: white;
        box-shadow: 0 2px 8px rgba(245, 158, 11, 0.3);
    }

    .bg-danger {
        background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
        color: white;
        box-shadow: 0 2px 8px rgba(239, 68, 68, 0.3);
    }

    /* Button Styling */
    .btn {
        border-radius: 8px;
        font-weight: 600;
        font-size: 12px;
        padding: 6px 14px;
        transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);
        border: 2px solid;
        position: relative;
        overflow: hidden;
        cursor: pointer;
        text-decoration: none;
        display: inline-block;
        text-align: center;
        margin-right: 6px;
    }

        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.6s ease;
        }

        .btn:hover::before {
            left: 100%;
        }

    .btn-sm {
        padding: 4px 10px;
        font-size: 11px;
    }

    .btn-success {
        background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%);
        border-color: #16a34a;
        color: white;
        box-shadow: 0 3px 12px rgba(34, 197, 94, 0.3);
    }

        .btn-success:hover {
            background: linear-gradient(135deg, #16a34a 0%, #15803d 100%);
            border-color: #15803d;
            transform: translateY(-1px);
            box-shadow: 0 5px 16px rgba(34, 197, 94, 0.4);
            color: white;
        }

    .btn-outline-danger {
        background: transparent;
        color: #dc2626;
        border-color: #ef4444;
        box-shadow: 0 3px 12px rgba(239, 68, 68, 0.2);
    }

        .btn-outline-danger:hover {
            background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
            border-color: #dc2626;
            color: white;
            transform: translateY(-1px);
            box-shadow: 0 5px 16px rgba(239, 68, 68, 0.4);
        }

    .btn-outline-primary {
        background: transparent;
        color: #2563eb;
        border-color: #3b82f6;
        box-shadow: 0 3px 12px rgba(59, 130, 246, 0.2);
    }

        .btn-outline-primary:hover {
            background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
            border-color: #2563eb;
            color: white;
            transform: translateY(-1px);
            box-shadow: 0 5px 16px rgba(59, 130, 246, 0.4);
        }

    /* Icon Styling */
    .bi {
        margin-right: 4px;
        font-size: 12px;
    }

    .bi-check-circle::before {
        content: '?';
    }

    .bi-x-circle::before {
        content: '?';
    }

    .bi-pencil::before {
        content: '??';
    }

    /* Form and Select Styling */
    .d-flex {
        display: flex;
        align-items: center;
    }

    .gap-2 {
        gap: 8px;
    }

    .form-select {
        background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%);
        border: 2px solid rgba(34, 197, 94, 0.2);
        border-radius: 8px;
        padding: 6px 12px;
        font-size: 13px;
        font-weight: 500;
        color: #374151;
        transition: all 0.3s ease;
        cursor: pointer;
        position: relative;
        box-shadow: 0 2px 8px rgba(34, 197, 94, 0.1);
    }

        .form-select:focus {
            outline: none;
            border-color: #22c55e;
            box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.1);
            background: linear-gradient(145deg, #f0fdf4 0%, #dcfce7 100%);
        }

        .form-select:hover {
            border-color: #16a34a;
            background: linear-gradient(145deg, #f0fdf4 0%, #dcfce7 100%);
        }

    .form-select-sm {
        padding: 4px 8px;
        font-size: 12px;
        min-width: 120px;
    }

    .form-select option {
        padding: 8px 12px;
        background: white;
        color: #374151;
        font-weight: 500;
    }

        .form-select option:hover {
            background: #f0fdf4;
        }

    /* Approval Status Styling */
    .approval-status {
        padding: 4px 12px;
        border-radius: 12px;
        font-size: 12px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        display: inline-block;
    }

        .approval-status.approved {
            background: linear-gradient(135deg, #dcfce7 0%, #bbf7d0 100%);
            color: #15803d;
            border: 1px solid #22c55e;
        }

        .approval-status.pending {
            background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
            color: #92400e;
            border: 1px solid #f59e0b;
        }

    /* Form Styling */
    form {
        display: inline-block;
        margin: 0;
    }

    input[type="hidden"] {
        display: none;
    }

    /* Tab Counter Styling */
    .nav-link .badge {
        margin-left: 8px;
        padding: 2px 8px;
        font-size: 10px;
        background: rgba(34, 197, 94, 0.2);
        color: #16a34a;
        border-radius: 10px;
    }

    .nav-link.active .badge {
        background: rgba(255, 255, 255, 0.3);
        color: #15803d;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        body

    {
        padding: 20px 15px;
    }

    h3 {
        font-size: 24px;
        padding-left: 40px;
    }

        h3::before {
            font-size: 24px;
        }

    .p-3 {
        padding: 20px;
    }

    .nav-link {
        padding: 16px 20px;
        font-size: 14px;
    }

    .table thead th,
    .table tbody td {
        padding: 12px 8px;
        font-size: 13px;
    }

    .btn-sm {
        padding: 3px 8px;
        font-size: 10px;
        margin-right: 4px;
        margin-bottom: 4px;
    }

    }

    @@media (max-width: 576px) {
        h3

    {
        font-size: 20px;
        padding-left: 0;
        text-align: center;
    }

    h3::before {
        position: static;
        display: block;
        margin-bottom: 8px;
    }

    h3::after {
        left: 50%;
        transform: translateX(-50%);
        width: 100px;
    }

    .nav-tabs {
        flex-direction: column;
    }

    .nav-link {
        text-align: center;
        border-bottom: 1px solid rgba(34, 197, 94, 0.1);
    }

    .table thead th:first-child,
    .table tbody td:first-child {
        display: none;
    }

    .btn-sm {
        display: block;
        width: 100%;
        margin-bottom: 6px;
    }

    }

    /* Loading States */
    .btn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        transform: none !important;
    }

    /* Success/Error Feedback */
    .table tbody tr.approved {
        background: linear-gradient(135deg, #dcfce7 0%, #bbf7d0 100%) !important;
    }

    .table tbody tr.rejected {
        background: linear-gradient(135deg, #fef2f2 0%, #fecaca 100%) !important;
    }
</style>

<script>
    // Tab functionality
    document.querySelectorAll('[data-bs-toggle="tab"]').forEach(tab => {
        tab.addEventListener('click', function(e) {

            // Remove active class from all tabs and panes
            document.querySelectorAll('.nav-link').forEach(link => link.classList.remove('active'));
            document.querySelectorAll('.tab-pane').forEach(pane => {
                pane.classList.remove('show', 'active');
            });

            // Add active class to clicked tab
            this.classList.add('active');

            // Show corresponding tab pane
            const targetId = this.getAttribute('data-bs-target');
            const targetPane = document.querySelector(targetId);
            if (targetPane) {
                targetPane.classList.add('show', 'active');
            }
        });
    });

    // Button interactions
    document.querySelectorAll('.btn').forEach(btn => {
        btn.addEventListener('click', function(e) {
            if (this.classList.contains('btn-success')) {
                const row = this.closest('tr');
                row.classList.add('approved');

                this.innerHTML = '<i class="bi bi-check-circle"></i> Approved!';
                this.disabled = true;

                const rejectBtn = row.querySelector('.btn-outline-danger');
                if (rejectBtn) {
                    rejectBtn.style.display = 'none';
                }

                setTimeout(() => {
                    row.style.opacity = '0.7';
                }, 1000);

            } else if (this.classList.contains('btn-outline-danger')) {
                const row = this.closest('tr');
                row.classList.add('rejected');

                this.innerHTML = '<i class="bi bi-x-circle"></i> Rejected';
                this.disabled = true;

                const approveBtn = row.querySelector('.btn-success');
                if (approveBtn) {
                    approveBtn.style.display = 'none';
                }

                setTimeout(() => {
                    row.style.opacity = '0.7';
                }, 1000);

            } else if (this.classList.contains('btn-outline-primary')) {
                const form = this.closest('form');
                const select = form.querySelector('select[name="role"]');
                const selectedRole = select.value;
                const row = this.closest('tr');
                const badge = row.querySelector('.badge');

                // Update the badge
                badge.className = 'badge';
                badge.textContent = selectedRole;

                if (selectedRole === 'Admin') {
                    badge.classList.add('bg-danger');
                } else if (selectedRole === 'Teacher') {
                    badge.classList.add('bg-warning');
                } else if (selectedRole === 'Student') {
                    badge.classList.add('bg-primary');
                }

                // Show success feedback
                this.innerHTML = 'Updated!';
                this.disabled = true;
                this.classList.remove('btn-outline-primary');
                this.classList.add('btn-success');

                setTimeout(() => {
                    this.innerHTML = 'Update';
                    this.disabled = false;
                    this.classList.remove('btn-success');
                    this.classList.add('btn-outline-primary');
                }, 2000);
            }
        });
    });

    // Add row hover effects
    document.querySelectorAll('.table tbody tr').forEach(row => {
        row.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-2px)';
        });

        row.addEventListener('mouseleave', function() {
            if (!this.classList.contains('approved') && !this.classList.contains('rejected')) {
                this.style.transform = 'translateY(0)';
            }
        });
    });

    // Update tab counters when actions are performed
    function updateTabCounters() {
        const pendingRows = document.querySelectorAll('#pending tbody tr:not(.approved):not(.rejected)');
        const pendingBadge = document.querySelector('#pending-tab .badge');
        if (pendingBadge) {
            pendingBadge.textContent = pendingRows.length;
        }
    }

    // Listen for approval/rejection actions to update counters
    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('btn-success') || e.target.classList.contains('btn-outline-danger')) {
            setTimeout(updateTabCounters, 100);
        }
    });
</script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'978d185ef0354e3d',t:'MTc1NjgxNzAyOS4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script>